// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Clerk用户系统 - 简化的用户模型
model User {
  id            String    @id // Clerk用户ID
  name          String?
  email         String    @unique
  image         String?
  role          String    @default("user") // user, admin, moderator
  status        String    @default("active") // active, banned, suspended
  locale        String    @default("zh-CN") // 用户偏好语言
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  websites      Website[] // 用户提交的网站
  likes         WebsiteLike[] // 用户点赞记录
  favorites     WebsiteFavorite[] // 用户收藏记录
  reviews       WebsiteReview[] // 用户评论记录

  @@map("users")
}

model Website {
  id          Int      @id @default(autoincrement())
  title       String
  url         String   @unique
  description String
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int
  thumbnail   String?
  status      String   @default("pending")
  visits      Int      @default(0)
  likes       Int      @default(0)
  active      Int      @default(1)
  
  // 网站质量评估字段
  quality_score Int     @default(50)    // 质量评分 0-100
  is_trusted    Boolean @default(false) // 是否为可信站点
  is_featured   Boolean @default(false) // 是否为精选站点
  weight        Int     @default(1)     // 权重 1-10
  tags          String? // 标签，用逗号分隔
  
  // 增强表单字段
  email         String?  // 提交者商业邮箱
  tagline       String?  // 工具标语
  features      Json?    @default("[]") // 主要特点JSON数组
  pricing_model String   @default("free") // 定价模型
  has_free_version Boolean @default(false) // 是否有免费版本
  base_price    String?  // 基础价格
  
  // 社交媒体链接
  twitter_url   String?  // Twitter/X链接
  linkedin_url  String?  // LinkedIn页面
  facebook_url  String?  // Facebook页面  
  instagram_url String?  // Instagram页面
  youtube_url   String?  // YouTube页面
  discord_url   String?  // Discord社区链接
  
  // 定价计划
  pricing_plans Json?    @default("[]") // 定价计划数组
  
  // 平台支持
  ios_app_url      String?  // iOS应用URL
  android_app_url  String?  // Android应用URL
  web_app_url      String?  // Web应用URL
  desktop_platforms Json?   @default("[]") // 桌面平台支持 [mac, windows, linux]
  
  // 专业AI工具详情字段
  logo_url      String?  // Logo图片URL
  screenshots   Json?    @default("[]") // 截图数组 
  video_url     String?  // 演示视频URL
  github_url    String?  // GitHub仓库链接
  
  // 技术信息
  supported_platforms Json? @default("[]") // 支持的平台 [web, ios, android, mac, windows, linux]
  api_available       Boolean @default(false) // 是否提供API
  integrations       Json?    @default("[]") // 集成平台列表
  languages_supported Json?   @default("[]") // 支持的语言
  
  // 高级功能
  use_cases         Json?    @default("[]") // 使用场景
  target_audience   Json?    @default("[]") // 目标用户群体
  pros_cons         Json?    @default("{}") // 优缺点 {"pros": [], "cons": []}
  alternatives      Json?    @default("[]") // 替代产品
  
  // 内容和媒体
  detailed_description String? @db.Text // 详细描述
  changelog            String? @db.Text // 更新日志
  faq                 Json?    @default("[]") // 常见问题
  
  // SEO相关字段
  domain_authority Int?  // 域名权重
  last_checked     DateTime? // 最后检查时间
  response_time    Int?      // 响应时间(ms)
  ssl_enabled      Boolean   @default(true) // 是否启用SSL
  
  // 用户关联
  submittedBy   String? // 提交者用户ID
  submitter     User?   @relation(fields: [submittedBy], references: [id])
  
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // 关联关系
  websiteLikes     WebsiteLike[]
  websiteFavorites WebsiteFavorite[]
  websiteReviews   WebsiteReview[]

  @@map("websites")
  @@index([category_id])
  @@index([status])
  @@index([quality_score])
  @@index([is_trusted])
  @@index([is_featured])
  @@index([submittedBy])
  @@index([pricing_model])
  @@index([has_free_version])
}

// 用户点赞记录
model WebsiteLike {
  id        String   @id @default(cuid())
  userId    String
  websiteId Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  website Website @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@unique([userId, websiteId])
  @@map("website_likes")
}

// 用户收藏记录
model WebsiteFavorite {
  id        String   @id @default(cuid())
  userId    String
  websiteId Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  website Website @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@unique([userId, websiteId])
  @@map("website_favorites")
}

// 用户评论记录
model WebsiteReview {
  id        String   @id @default(cuid())
  userId    String
  websiteId Int
  rating    Int      @default(5) // 1-5 星评分
  comment   String?  // 评论内容
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  website Website @relation(fields: [websiteId], references: [id], onDelete: Cascade)

  @@unique([userId, websiteId])
  @@map("website_reviews")
  @@index([websiteId])
  @@index([rating])
}

model Category {
  id         Int       @id @default(autoincrement())
  name       String
  slug       String    @unique
  name_en    String?   // 英文名称
  name_zh    String?   // 中文名称
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  websites   Website[]

  @@map("categories")
  @@index([slug])
}

model FooterLink {
  id         Int      @id @default(autoincrement())
  title      String   // 链接标题
  url        String   @unique // 链接地址
  isExternal Boolean  @default(true) // 是否为外部链接
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("footer_links")
  @@index([url])
}